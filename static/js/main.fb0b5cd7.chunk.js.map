{"version":3,"sources":["components/navigation.js","components/header.js","components/intro.js","components/mainPages/homePage.js","components/cheesecakeSelector.js","components/mainPages/orderPage.js","components/modal.js","components/mainPages/cheesecakePage.js","App.js","serviceWorker.js","index.js"],"names":["Navigation","className","to","Header","src","Intro","HomePage","CheesecakeSelector","props","sendData","uniqueID","removeCheesecakeClick","changeQty","event","currentQty","state","qty","newQty","target","value","tempCost","cost","adjustmentCost","adjustTotal","setState","value2","value3","specialRequest","handleChange","bind","handleChange2","handleChange3","handleChange4","this","newCost","type","onClick","id","name","min","max","onChange","placeholder","React","Component","OrderPage","removeCheesecake","uniqueIDToRemove","console","log","cheesecakeSelectors","length","newArray","indexLocation","forEach","childObj","index","removedItem","splice","costAdjustmentValue","totalCost","addCheesecake","handleSubmit","newUniqueID","push","alert","preventDefault","onSubmit","htmlFor","map","cheesecakeSelector","Fragment","key","modalRoot","document","getElementById","Modal","element","createElement","appendChild","removeChild","createPortal","children","toggleModal","cheesecakeType","getAttribute","cheesecakeName","modalCheesecake","cheesecakename","originalCheesecakeArray","filter","cheesecake","fruitCheesecakeArray","specialtyCheesecakeArray","showModal","Cheesecakes","imagePath","data-cheesecaketype","data-cheesecakename","alt","description","price","App","exact","path","component","CheesecakePage","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","basename","process","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.fb0b5cd7.chunk.js","sourcesContent":["// Import supporting files\nimport React from \"react\";\nimport { Link } from 'react-router-dom'; // import Link for router\n\n// Create Navigation component\n\nconst Navigation = () => {\n   \n    // Display navigation for the user\n    return (\n        <div className=\"navigation\">\n            <ul>\n                <li className=\"active\"><Link to=\"/TastefullyTiffanysCheesecakes\">Home</Link></li>\n                <li><Link to=\"/TastefullyTiffanysCheesecakes/cheesecakes\">Cheesecakes</Link></li>\n                <li><Link to=\"/TastefullyTiffanysCheesecakes/placeorder\">Order</Link></li>\n            </ul>\n        </div>\n    );\n}\n\nexport default Navigation;","// Import supporting files\nimport React from \"react\";\n//import logo from '/img/TTC_LOGO.png';\n\n// Create Navigation component\n\nconst Header = () => {\n   \n    // Display navigation for the user\n    return (\n        <div className=\"topheader\">\n            <img src=\"/TastefullyTiffanysCheesecakes/img/TTC_LOGO.png\"></img>\n        </div>\n    );\n}\n\nexport default Header;","// Import supporting files\nimport React from \"react\";\n\n// Create Navigation component\n\nconst Intro = () => {\n   \n    // Display navigation for the user\n    return (\n        <div className=\"introContainer\">\n            <div className=\"intro\">\n                <p>Every occasion deserves a Cheesecake!</p>\n                <p>Welcome to Tastefully Tiffany's Cheesecake Bakery! Where every flavor is an experience, and every cheesecake is an extravaganza! Come see what people have been raving about, and try one for yourself!</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Intro;","// Import supporting files\nimport React from \"react\";\n\nimport Navigation from '../navigation';\nimport Header from '../header';\nimport Intro from '../intro';\n\n// Create Navigation component\n\nconst HomePage = () => {\n   \n    // Display navigation for the user\n    return (\n        <div>\n            <Navigation />\n            <Header />\n            <Intro />\n        </div>\n    );\n}\n\nexport default HomePage;","// Import supporting files\nimport React, { Fragment } from \"react\";\n\nexport default class CheesecakeSelector extends React.Component {\n    constructor(props) \n    {\n      super(props);\n\n      this.state = {value: 'originalCheesecake', value2: 'blueberry', value3: 'carmel', specialRequest: \"\", cost: 25, qty: 1};\n  \n      this.handleChange = this.handleChange.bind(this);\n      this.handleChange2 = this.handleChange2.bind(this);\n      this.handleChange3 = this.handleChange3.bind(this);\n      this.handleChange4 = this.handleChange4.bind(this);\n    }\n\n    componentDidMount()\n    {\n        var tempCost = this.state.cost*this.state.qty;\n        this.props.adjustTotal((tempCost));\n\n    }\n\n    componentWillUnmount()\n    {\n        var tempCost = this.state.cost*this.state.qty*-1;\n        this.props.adjustTotal((tempCost));\n    }\n\n    sendData = () =>\n    {\n        let uniqueID = this.props.uniqueID;\n        this.props.removeCheesecakeClick(uniqueID);\n    }\n\n    changeQty = (event) =>\n    {\n        let currentQty = this.state.qty;\n        let newQty = event.target.value;\n        let tempCost = this.state.cost;\n        let adjustmentCost = ((tempCost*currentQty) - (tempCost*newQty))*-1\n\n        this.props.adjustTotal((adjustmentCost));\n\n        this.setState({qty: newQty})\n    }\n  \n    handleChange(event) \n    {\n        var tempCost = this.state.cost;\n        var newCost = 0;\n\n        switch (event.target.value) \n        {\n            case 'originalCheesecake':\n                this.props.adjustTotal((tempCost-25)*this.state.qty*-1);\n                newCost = 25;\n                break;\n            case 'originalCheesecakeFruit':\n                this.props.adjustTotal((tempCost-30)*this.state.qty*-1);\n                newCost = 30;\n                break;\n            case 'specialtyCheesecake':\n                this.props.adjustTotal((tempCost-32)*this.state.qty*-1);\n                newCost = 32;\n                break;\n            default:\n                newCost = 0;\n                break;\n        }\n\n        this.setState({value: event.target.value, cost: newCost});\n    }\n    handleChange2(event) \n    {\n        this.setState({value2: event.target.value});\n    }\n    handleChange3(event) \n    {\n        this.setState({value3: event.target.value});\n    }\n\n    handleChange4(event) \n    {\n        this.setState({specialRequest: event.target.value});\n    }\n  \n    render() {\n        if (this.state.value === 'originalCheesecake') \n        {\n            return (\n                <Fragment>\n                    <br />\n                    <br />\n                    <br />\n                    <button type=\"button\" onClick={this.sendData}> Remove Cheesecake </button>\n                    <label className=\"quantity\">QTY: </label> <input type=\"number\" id=\"quantity\" name=\"quantity\" value={this.state.qty}\n       min=\"1\" max=\"100\" onChange={this.changeQty}></input>\n                    <label className=\"cheesecakeSelector\">\n                        Cheesecake Type:\n                    </label>\n                    <select value={this.state.value} onChange={this.handleChange}>\n                        <option value=\"originalCheesecake\">Original Cheesecake</option>\n                        <option value=\"originalCheesecakeFruit\">Original Cheesecake + Fruit</option>\n                        <option value=\"specialtyCheesecake\">Specialty Cheesecake</option>\n                    </select>\n                    <textarea value={this.state.specialRequest} placeholder=\"Speical Request...\" onChange={this.handleChange4} />\n                    <br />\n                </Fragment>  \n            );\n        } \n        else if (this.state.value === 'originalCheesecakeFruit')\n        {\n            return (\n                <Fragment>\n                    <br />\n                    <br />\n                    <br />\n                    <button type=\"button\" onClick={this.sendData}> Remove Cheesecake </button>\n                    <label className=\"quantity\">QTY: </label> <input type=\"number\" id=\"quantity\" name=\"quantity\" value={this.state.qty}\n       min=\"1\" max=\"100\" onChange={this.changeQty}></input>\n                    <label className=\"cheesecakeSelector\">\n                        Cheesecake Type:\n                    </label>\n                    <select value={this.state.value} onChange={this.handleChange}>\n                        <option value=\"originalCheesecake\">Original Cheesecake</option>\n                        <option value=\"originalCheesecakeFruit\">Original Cheesecake + Fruit</option>\n                        <option value=\"specialtyCheesecake\">Specialty Cheesecake</option>\n                    </select>\n                    <label className=\"cheesecakeSelector\">\n                        Fruit Topping:\n                    </label>\n                    <select value={this.state.value2} onChange={this.handleChange2}>\n                        <option value=\"blueberry\">Blueberry</option>\n                        <option value=\"coconut\">Coconut</option>\n                        <option value=\"keylime\">Key Lime</option>\n                        <option value=\"strawberry\">Strawberry</option>\n                        <option value=\"lemon\">Lemon</option>\n                        <option value=\"mixedberry\">Mixed Berry</option>\n                    </select>\n                    <br />\n                    <textarea value={this.state.specialRequest} placeholder=\"Speical Request...\" onChange={this.handleChange4} />\n                </Fragment>  \n            );\n        }\n        else\n        {\n            return (\n                <Fragment>\n                    <br />\n                    <br />\n                    <br />\n                    <button type=\"button\" onClick={this.sendData}> Remove Cheesecake </button>\n                    <label className=\"quantity\">QTY: </label> <input type=\"number\" id=\"quantity\" name=\"quantity\" value={this.state.qty}\n       min=\"1\" max=\"100\" onChange={this.changeQty}></input>\n                    <label className=\"cheesecakeSelector\">\n                        Cheesecake Type:\n                    </label>\n                    <select value={this.state.value} onChange={this.handleChange}>\n                        <option value=\"originalCheesecake\">Original Cheesecake</option>\n                        <option value=\"originalCheesecakeFruit\">Original Cheesecake + Fruit</option>\n                        <option value=\"specialtyCheesecake\">Specialty Cheesecake</option>\n                    </select>\n                    <label className=\"cheesecakeSelector\">\n                        Specialty Flavor:\n                    </label>\n                    <select value={this.state.value3} onChange={this.handleChange3}>\n                        <option value=\"carmel\">Carmel</option>\n                        <option value=\"carmelpecanturtle\">Carmel Pecan Turtle</option>\n                        <option value=\"ghiradellichocolate\">Chiradelli Chocolate</option>\n                        <option value=\"oreo\">Oreo</option>\n                        <option value=\"reeses\">Resses</option>\n                        <option value=\"tennesseewhisky\">Tennessee Whiskey</option>\n                        <option value=\"vanillabean\">Vanilla Bean</option>\n                        </select>\n                    <br />\n                    <textarea value={this.state.specialRequest} placeholder=\"Speical Request...\" onChange={this.handleChange4} />\n                </Fragment>  \n            );\n        }\n      \n    }\n  }","// Import supporting files\nimport React, { Fragment } from \"react\";\nimport Navigation from '../navigation';\n\nimport CheesecakeSelector from '../cheesecakeSelector';\n\nexport default class OrderPage extends React.Component \n{\n\n    constructor(props) \n    {\n      super(props);\n  \n      this.addCheesecake = this.addCheesecake.bind(this);\n      this.removeCheesecake = this.removeCheesecake.bind(this);\n      this.adjustTotal = this.adjustTotal.bind(this);\n      this.handleSubmit = this.handleSubmit.bind(this);\n\n      this.state = {\n          cheesecakeSelectors: [<CheesecakeSelector removeCheesecakeClick={this.removeCheesecake} adjustTotal={this.adjustTotal} uniqueID={0}/>],\n           uniqueID: 0,\n           totalCost: 0\n        };\n    }\n  \n    addCheesecake() \n    {\n        let newArray = this.state.cheesecakeSelectors;\n        let newUniqueID = this.state.uniqueID + 1;\n        newArray.push(<CheesecakeSelector removeCheesecakeClick={this.removeCheesecake} adjustTotal={this.adjustTotal} uniqueID={newUniqueID}/>);\n        this.setState({ cheesecakeSelectors: newArray, uniqueID: newUniqueID });\n    }\n\n    removeCheesecake = (uniqueIDToRemove) => \n    {\n        console.log('UniqueID to remove:');\n        console.log(uniqueIDToRemove);\n\n        if (this.state.cheesecakeSelectors.length > 1)\n        {\n            let newArray = this.state.cheesecakeSelectors;\n            var indexLocation = -1;\n\n            newArray.forEach((childObj,index) => {\n                \n                if (childObj.props.uniqueID === uniqueIDToRemove) \n                {\n                    console.log('found index location: ' + index);\n                    indexLocation = index;   \n                }\n            });\n\n            let removedItem = newArray.splice(indexLocation,1);\n\n            // newArray.splice(indexLocation,1);\n\n            console.log('removed item: ');\n            console.log(removedItem);\n\n            // console.log('new array: ');\n            // console.log(newArray);\n            \n            this.setState({ cheesecakeSelectors: newArray });\n        }\n        \n    }\n\n    adjustTotal = (costAdjustmentValue) => \n    {\n        var tempCost = this.state.totalCost;\n        tempCost = tempCost + costAdjustmentValue;\n\n        this.setState({totalCost: tempCost});\n    }\n\n    handleSubmit(event) \n    {\n        alert('You submitted the form!');\n        event.preventDefault();\n    }\n\n  \n    render() {\n        \n        return(\n            <Fragment>\n                <Navigation />\n                <form onSubmit={this.handleSubmit}>\n\n                    <label className=\"title\">ORDER FORM</label>\n\n                    <label className=\"subtitle\">CONTACT INFORMATION</label>\n\n                    <label htmlFor=\"firstName\" className=\"first-name\">First:</label>\n                    <input id=\"firstName\" type=\"text\"/>\n\n                    <label htmlFor=\"lastName\" className=\"last-name\">Last:</label>\n                    <input id=\"lastName\" type=\"text\"/>\n\n                    <label htmlFor=\"phoneNumber\" className=\"phoneNumber\">Phone #:</label>\n                    <input id=\"phoneNumber\" type=\"tel\"/>\n\n                    <label htmlFor=\"email\" className=\"email\">Email:</label>\n                    <input id=\"email\" type=\"email\"/>\n\n                    <label htmlFor=\"address\" className=\"address\">Address:</label>\n                    <input id=\"address\" type=\"text\"/>\n\n                    <label htmlFor=\"city\" className=\"city\">City:</label>\n                    <input id=\"city\" type=\"text\"/>\n\n                    <label htmlFor=\"state\" className=\"state\">State:</label>\n                    <input id=\"state\" type=\"text\"/>\n\n                    <label htmlFor=\"zip\" className=\"zip\">Zip Code:</label>\n                    <input id=\"zip\" type=\"text\"/>\n\n                    <label htmlFor=\"deliveryDate\" className=\"deliveryDate\">Delivery Date:</label>\n                    <input id=\"deliveryDate\" type=\"text\"/>\n                    <hr />\n\n                    <label className=\"subtitle\">CHEESECAKES</label>\n                {\n                    this.state.cheesecakeSelectors.map((cheesecakeSelector) => (\n                        <React.Fragment key={cheesecakeSelector.props.uniqueID}>\n                            { cheesecakeSelector }\n                         </React.Fragment>))\n                }\n                    \n                    <button type=\"button\" onClick={this.addCheesecake}> Add Cheesecake </button> \n                    <hr />\n\n                    <label className=\"subtitle\">ORDER SUMMARY</label>\n\n                    <label className=\"totalCost\">Total Cost: ${this.state.totalCost}</label>\n                    <button className=\"myButton\">Submit</button>\n                </form>\n                \n            </Fragment>\n        );\n    \n    }\n  }","import React from 'react';\nimport { createPortal } from 'react-dom';\n\n// We get hold of the div with the id modal that we have created in index.html\n\nconst modalRoot = document.getElementById( 'modal' );\n\nclass Modal extends React.Component \n{\n   constructor( props ) \n   {\n        super( props );\n        // We create an element div for this modal\n        this.element = document.createElement( 'div' );\n        this.element.className = 'modal-container';\n   }\n\n   // We append the created div to the div#modal\n   componentDidMount() \n   {\n        modalRoot.appendChild( this.element );\n   }\n\n  /**\n    * We remove the created div when this Modal Component is unmounted\n    * Used to clean up the memory to avoid memory leak \n    */\n\n   componentWillUnmount() \n   {\n      modalRoot.removeChild( this.element );\n   }\n\n    render()\n    {\n        return createPortal( this.props.children, this.element );\n    }\n}\nexport default Modal;","// Import supporting files\nimport React, { Fragment } from \"react\";\nimport Navigation from '../navigation';\nimport Modal from '../modal';\n\nimport Cheesecakes from '../../cheesecakes.json';\n\n// Create Navigation component\n\nlet cheesecakeMissing = '/img/default_cheesecake_image.png';\n\nexport default class OrderPage extends React.Component\n{\n    constructor(props) \n    {\n      super(props);\n\n      let originalCheesecakeArray = Cheesecakes.filter( (cheesecake) => cheesecake.type === \"original\");\n      let fruitCheesecakeArray = Cheesecakes.filter( (cheesecake) => cheesecake.type === \"originalFruit\");\n      let specialtyCheesecakeArray = Cheesecakes.filter( (cheesecake) => cheesecake.type === \"specialty\");\n\n      this.state = \n      {\n        originalCheesecakeArray: originalCheesecakeArray,\n        fruitCheesecakeArray: fruitCheesecakeArray,\n        specialtyCheesecakeArray: specialtyCheesecakeArray,\n        modalCheesecake: null,\n        showModal: false\n      }\n\n    }\n\n    toggleModal = (event) => \n    {\n        let cheesecakeType = event.target.getAttribute('data-cheesecaketype');\n        let cheesecakeName = event.target.getAttribute('data-cheesecakename');\n        let modalCheesecake = null;\n\n        console.log(event.target.cheesecakename);\n        console.log(\"type: \" + cheesecakeType);\n        console.log(\"name: \" + cheesecakeName);\n        \n\n        if (cheesecakeType === 'original') \n        {\n            modalCheesecake = this.state.originalCheesecakeArray.filter( (cheesecake) => cheesecake.name === cheesecakeName);\n        }\n        else if (cheesecakeType === 'originalFruit') \n        {\n            modalCheesecake = this.state.fruitCheesecakeArray.filter( (cheesecake) => cheesecake.name === cheesecakeName);\n        }\n        else\n        {\n            modalCheesecake = this.state.specialtyCheesecakeArray.filter( (cheesecake) => cheesecake.name === cheesecakeName);\n        }\n\n        console.log(\"cheesecake selected:\");\n        console.log(modalCheesecake);\n        \n        \n        \n        this.setState({\n            showModal: !this.state.showModal, \n            modalCheesecake: modalCheesecake\n        })\n    };\n\n    render() \n    {\n        const { showModal } = this.state;\n     \n        return(\n           <Fragment>\n                <Navigation/>\n                <div className=\"collectionTitle\">\n                <br />\n                <br />\n                <p>Fruit Cheesecakes</p>\n                </div>\n                <div className=\"row\">\n                {\n                    this.state.fruitCheesecakeArray.map((cheesecake, index) => \n                    (\n                        <div className=\"column\" key={index}>\n                            <div className=\"imgContainer\">\n                                <img className=\"image\" src={cheesecake.imagePath} onClick={this.toggleModal} data-cheesecaketype={cheesecake.type} data-cheesecakename={cheesecake.name}/>\n                                <div className=\"middle\">\n                                    <div className=\"text\" onClick={this.toggleModal} data-cheesecaketype={cheesecake.type} data-cheesecakename={cheesecake.name}>{cheesecake.name}</div>\n                                </div>\n                            </div>\n                        </div>\n                    ))\n                }\n                </div>\n                <div className=\"collectionTitle\">\n                    <p>Specialty Cheesecakes</p>\n                </div>\n                <div className=\"row\">\n                {\n                    this.state.specialtyCheesecakeArray.map((cheesecake, index) => \n                    (\n                        <div className=\"column\" key={index}>\n                            <div className=\"imgContainer\">\n                                <img className=\"image\" src={cheesecake.imagePath} onClick={this.toggleModal} data-cheesecaketype={cheesecake.type} data-cheesecakename={cheesecake.name}/>\n                                <div className=\"middle\">\n                                    <div className=\"text\" onClick={this.toggleModal} data-cheesecaketype={cheesecake.type} data-cheesecakename={cheesecake.name}>{cheesecake.name}</div>\n                                </div>\n                            </div>\n                        </div>\n                    ))\n                }\n                </div>\n                \n                {\n                    showModal ? \n                    (\n                       <Modal>\n                       <div className=\"modal\">\n                            <button type=\"button\" id=\"modal-close-btn\" className=\"modal-close-btn\" onClick={this.toggleModal}><strong>X</strong></button>\n                            <div className=\"modal-info-container\">\n                                <img className=\"modal-img\" src={this.state.modalCheesecake[0].imagePath} alt=\"profile picture\"/>\n                                <p></p>\n                                <h3 id=\"name\" className=\"modal-name cap\">{this.state.modalCheesecake[0].name}</h3>\n                                <p className=\"modal-text\">Description: </p>\n                                <p className=\"modal-text cap\">{this.state.modalCheesecake[0].description}</p>\n                                <p className=\"modal-text\">Price: ${this.state.modalCheesecake[0].price} </p>\n                            </div>\n                        </div>\n                       </Modal>\n                    ) : null\n                }\n     \n           </Fragment>\n        );\n     }\n}","import React from 'react';\nimport { BrowserRouter, Route, Switch} from 'react-router-dom';\nimport './App.css';\n\nimport HomePage from './components/mainPages/homePage';\nimport OrderPage from './components/mainPages/orderPage';\nimport CheesecakePage from './components/mainPages/cheesecakePage';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/TastefullyTiffanysCheesecakes\" component={HomePage}/>\n          <Route path=\"/TastefullyTiffanysCheesecakes/placeorder\" component={OrderPage}/>\n          <Route path=\"/TastefullyTiffanysCheesecakes/cheesecakes\" component={CheesecakePage}/>\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router} from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename={process.env.PUBLIC_URL}>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}